// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ò–ò-–º–æ–¥–µ–ª–µ–π 2025 –≥–æ–¥–∞
(function() {
  // –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ò–ò-–º–æ–¥–µ–ª—è—Ö 2025 –≥–æ–¥–∞
  const aiModels = [
    {
      name: "GPT-5",
      company: "OpenAI",
      rank: "ü•á",
      description: "–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –¥–æ 10 –º–ª–Ω —Ç–æ–∫–µ–Ω–æ–≤. –õ–∏–¥–µ—Ä –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞, –∫–æ–¥–∞ –∏ –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á.",
      accuracy: "98%",
      speed: "9.2",
      safety: "9.5",
      features: ["–¢–µ–∫—Å—Ç", "–ö–æ–¥", "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", "–í–∏–¥–µ–æ", "–ì–æ–ª–æ—Å"],
      color: "#10a37f"
    },
    {
      name: "Gemini Ultra 2",
      company: "Google",
      rank: "ü•à",
      description: "–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–π –≥–∏–≥–∞–Ω—Ç —Å –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –≤–∏–¥–µ–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.",
      accuracy: "96%",
      speed: "8.8",
      safety: "9.3",
      features: ["–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–æ—Å—Ç—å", "–ü–æ–∏—Å–∫", "–ê–Ω–∞–ª–∏–∑", "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ"],
      color: "#4285f4"
    },
    {
      name: "Claude 4",
      company: "Anthropic",
      rank: "ü•â",
      description: "–°—Ç–∞–Ω–¥–∞—Ä—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —ç—Ç–∏—á–Ω–æ—Å—Ç–∏. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.",
      accuracy: "95%",
      speed: "8.5",
      safety: "9.8",
      features: ["–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ê–Ω–∞–ª–∏–∑", "–≠—Ç–∏–∫–∞", "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"],
      color: "#d97706"
    },
    {
      name: "Qwen-4",
      company: "Alibaba",
      rank: "4",
      description: "–ö–∏—Ç–∞–π—Å–∫–∞—è –º–æ–¥–µ–ª—å —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –∑–∞–¥–∞—á.",
      accuracy: "94%",
      speed: "9.5",
      safety: "8.9",
      features: ["–°–∫–æ—Ä–æ—Å—Ç—å", "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "–ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å", "–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ"],
      color: "#ff6b35"
    },
    {
      name: "LLaMA 4",
      company: "Meta",
      rank: "5",
      description: "–û—Ç–∫—Ä—ã—Ç–∞—è –º–æ–¥–µ–ª—å —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º. –î–µ–º–æ–∫—Ä–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–¥–æ–≤—ã–º –ò–ò-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º.",
      accuracy: "93%",
      speed: "8.7",
      safety: "8.8",
      features: ["Open Source", "–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ", "–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è", "–°–æ–æ–±—â–µ—Å—Ç–≤–æ"],
      color: "#1877f2"
    },
    {
      name: "Midjourney V7",
      company: "Midjourney",
      rank: "6",
      description: "–õ—É—á—à–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å—é. –•—É–¥–æ–∂–Ω–∏–∫ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è.",
      accuracy: "97%",
      speed: "7.8",
      safety: "8.5",
      features: ["–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å", "–í—ã—Å–æ–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ", "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"],
      color: "#8b5cf6"
    },
    {
      name: "DALL-E 4",
      company: "OpenAI",
      rank: "7",
      description: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.",
      accuracy: "96%",
      speed: "8.2",
      safety: "9.0",
      features: ["–ì–µ–Ω–µ—Ä–∞—Ü–∏—è", "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ü–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"],
      color: "#10a37f"
    },
    {
      name: "GitHub Copilot X",
      company: "Microsoft",
      rank: "8",
      description: "–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ IDE –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π –¥–æ 80% —Ä—É—Ç–∏–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.",
      accuracy: "95%",
      speed: "9.0",
      safety: "8.7",
      features: ["–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", "–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥", "–û—Ç–ª–∞–¥–∫–∞", "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"],
      color: "#0078d4"
    }
  ];

  let currentView = 'grid';

  // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –º–æ–¥–µ–ª–∏
  function createModelCard(model, index) {
    const card = document.createElement('div');
    card.className = 'ai-model-card';
    card.style.animationDelay = `${index * 0.1}s`;
    card.style.borderLeftColor = model.color;
    
    card.innerHTML = `
      <div class="model-header">
        <h3 class="model-name">${model.name}</h3>
        <span class="model-rank">${model.rank}</span>
      </div>
      <p class="model-description">${model.description}</p>
      <div class="model-stats">
        <div class="stat">
          <div class="stat-value">${model.accuracy}</div>
          <div class="stat-label">–¢–æ—á–Ω–æ—Å—Ç—å</div>
        </div>
        <div class="stat">
          <div class="stat-value">${model.speed}/10</div>
          <div class="stat-label">–°–∫–æ—Ä–æ—Å—Ç—å</div>
        </div>
        <div class="stat">
          <div class="stat-value">${model.safety}/10</div>
          <div class="stat-label">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</div>
        </div>
      </div>
      <div class="model-features">
        ${model.features.map(feature => `<span class="feature-tag">${feature}</span>`).join('')}
      </div>
    `;
    
    return card;
  }

  // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π
  function createModelList(model, index) {
    const item = document.createElement('li');
    item.className = 'news-list-item';
    item.style.animationDelay = `${index * 0.1}s`;
    
    item.innerHTML = `
      <div class="list-item-header">
        <span class="model-rank">${model.rank}</span>
        <strong>${model.name}</strong> - ${model.company}
      </div>
      <p>${model.description}</p>
      <div class="list-item-stats">
        –¢–æ—á–Ω–æ—Å—Ç—å: ${model.accuracy} | –°–∫–æ—Ä–æ—Å—Ç—å: ${model.speed}/10 | –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: ${model.safety}/10
      </div>
    `;
    
    return item;
  }

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  function displayAIContent() {
    const content = document.getElementById('ai-content');
    const timeElement = document.getElementById('ai-time');
    
    if (!content) {
      console.error('–≠–ª–µ–º–µ–Ω—Ç ai-content –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    content.innerHTML = '';

    if (currentView === 'grid') {
      aiModels.forEach((model, index) => {
        const card = createModelCard(model, index);
        content.appendChild(card);
      });
    } else {
      const list = document.createElement('ul');
      list.className = 'news-list';
      aiModels.forEach((model, index) => {
        const item = createModelList(model, index);
        list.appendChild(item);
      });
      content.appendChild(list);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è
    if (timeElement) {
      const now = new Date();
      timeElement.textContent = `–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${now.toLocaleString('ru-RU')}`;
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∞
  function setupViewToggle() {
    const toggles = document.querySelectorAll('.view-toggle');
    toggles.forEach(toggle => {
      toggle.addEventListener('click', () => {
        toggles.forEach(t => t.classList.remove('active'));
        toggle.classList.add('active');
        currentView = toggle.dataset.view;
        displayAIContent();
      });
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  function init() {
    displayAIContent();
    setupViewToggle();
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
})();
